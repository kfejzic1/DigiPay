// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProcessingServer.DAL;

#nullable disable

namespace ProcessingServer.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ProcessingServer.DAL.Entities.EInvoicePaymentHistory", b =>
                {
                    b.Property<int>("EInvoicePaymentHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("double");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PayeeBankAccountId")
                        .HasColumnType("int");

                    b.Property<string>("PayerAddress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PayerBankAccountId")
                        .HasColumnType("int");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("EInvoicePaymentHistoryId");

                    b.HasIndex("PayeeBankAccountId");

                    b.HasIndex("PayerBankAccountId");

                    b.ToTable("EInvoicePaymentHistory");
                });

            modelBuilder.Entity("ProcessingServer.DAL.Entities.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("double");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RecipientAccountId")
                        .HasColumnType("int");

                    b.Property<int>("SenderAccountId")
                        .HasColumnType("int");

                    b.Property<string>("TransactionPurpose")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("TransactionId");

                    b.HasIndex("RecipientAccountId");

                    b.HasIndex("SenderAccountId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("ProcessingServer.DAL.Entities.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ProcessingServer.DAL.Entities.UserBankAccount", b =>
                {
                    b.Property<int>("UserBankAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("Credit")
                        .HasColumnType("double");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Debit")
                        .HasColumnType("double");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<double>("Total")
                        .HasColumnType("double");

                    b.HasKey("UserBankAccountId");

                    b.HasIndex("OwnerId");

                    b.ToTable("UserBankAccounts");
                });

            modelBuilder.Entity("ProcessingServer.DAL.Entities.VendorBankAccount", b =>
                {
                    b.Property<int>("VendorBankAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatorId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<double>("Credit")
                        .HasColumnType("double");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Debit")
                        .HasColumnType("double");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<double>("Total")
                        .HasColumnType("double");

                    b.HasKey("VendorBankAccountId");

                    b.HasIndex("CreatorId");

                    b.ToTable("VendorBankAccounts");
                });

            modelBuilder.Entity("ProcessingServer.DAL.Entities.Voucher", b =>
                {
                    b.Property<int>("VoucherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ActivatorId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<double>("Amount")
                        .HasColumnType("double");

                    b.Property<int>("UserBankAccountId")
                        .HasColumnType("int");

                    b.HasKey("VoucherId");

                    b.HasIndex("ActivatorId");

                    b.HasIndex("UserBankAccountId");

                    b.ToTable("Vouchers");
                });

            modelBuilder.Entity("ProcessingServer.DAL.Entities.EInvoicePaymentHistory", b =>
                {
                    b.HasOne("ProcessingServer.DAL.Entities.VendorBankAccount", "PayeeBankAccount")
                        .WithMany()
                        .HasForeignKey("PayeeBankAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProcessingServer.DAL.Entities.UserBankAccount", "PayerBankAccount")
                        .WithMany()
                        .HasForeignKey("PayerBankAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PayeeBankAccount");

                    b.Navigation("PayerBankAccount");
                });

            modelBuilder.Entity("ProcessingServer.DAL.Entities.Transaction", b =>
                {
                    b.HasOne("ProcessingServer.DAL.Entities.UserBankAccount", "RecipientAccount")
                        .WithMany()
                        .HasForeignKey("RecipientAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProcessingServer.DAL.Entities.UserBankAccount", "SenderAccount")
                        .WithMany()
                        .HasForeignKey("SenderAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RecipientAccount");

                    b.Navigation("SenderAccount");
                });

            modelBuilder.Entity("ProcessingServer.DAL.Entities.UserBankAccount", b =>
                {
                    b.HasOne("ProcessingServer.DAL.Entities.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("ProcessingServer.DAL.Entities.VendorBankAccount", b =>
                {
                    b.HasOne("ProcessingServer.DAL.Entities.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("ProcessingServer.DAL.Entities.Voucher", b =>
                {
                    b.HasOne("ProcessingServer.DAL.Entities.User", "Activator")
                        .WithMany()
                        .HasForeignKey("ActivatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProcessingServer.DAL.Entities.UserBankAccount", "Account")
                        .WithMany()
                        .HasForeignKey("UserBankAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Activator");
                });
#pragma warning restore 612, 618
        }
    }
}
